[{"C:\\Users\\angle\\Desktop\\ticketapp\\src\\index.js":"1","C:\\Users\\angle\\Desktop\\ticketapp\\src\\reportWebVitals.js":"2","C:\\Users\\angle\\Desktop\\ticketapp\\src\\Ticket.js":"3","C:\\Users\\angle\\Desktop\\ticketapp\\src\\PostTicket.js":"4"},{"size":732,"mtime":1649424072446,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":2628,"mtime":1650004630342,"results":"8","hashOfConfig":"6"},{"size":2604,"mtime":1649421603262,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ihb1zr",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"C:\\Users\\angle\\Desktop\\ticketapp\\src\\index.js",[],[],"C:\\Users\\angle\\Desktop\\ticketapp\\src\\reportWebVitals.js",[],[],["24","25"],"C:\\Users\\angle\\Desktop\\ticketapp\\src\\Ticket.js",[],[],"C:\\Users\\angle\\Desktop\\ticketapp\\src\\PostTicket.js",["26","27","28","29"],[],"import axios from 'axios';\r\nimport React from 'react';\r\nimport * as ReactDOM from 'react-dom/client';\r\n\r\nconst baseURL = \"http://52.10.102.239/tickets\";\r\n\r\nconst ressource = axios.get(baseURL);\r\n// const expression = \"(e) => this.handleValidateTicket(ticket.id, e)\";\r\n\r\nclass PostTicket extends React.Component {\r\n  // state = {\r\n  //   tickets: []\r\n  // }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: []\r\n    };\r\n\r\n    this.handleDeleteTicket = this.handleDeleteTicket.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(baseURL)\r\n      .then(res => {\r\n        const tickets = res.data;\r\n        this.setState({ tickets });\r\n      })\r\n  }\r\n\r\n  handleDeleteTicket(id, event) {\r\n    axios.put(`${baseURL}/delete/${id}`).then((response) => {\r\n      this.setState({tickets: this.deleteTicket(id)})\r\n    });    \r\n  }\r\n\r\n  handleValidateTicket(id, event) {\r\n    axios.put(`${baseURL}/update/${id}`).then((response) => {\r\n      this.setState({tickets: this.deleteTicket(id)})\r\n    });\r\n  }\r\n\r\n  deleteTicket(id) {\r\n    var filtered = this.state.tickets.filter(function(value, index, arr){ \r\n      return value.id != id;\r\n    });\r\n    return filtered\r\n  }\r\n\r\n  \r\n\r\n  checkStatus (validationStatus, el) {\r\n    if (validationStatus == 1) {\r\n      return (\r\n        <button type=\"button\" onClick={(e) => this.handleValidateTicket(el, e)} className=\"btn btn-sm btn-success\" disabled>Valider</button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button type=\"button\" onClick={(e) => this.handleValidateTicket(el, e)} className=\"btn btn-sm btn-success\">Valider</button>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      this.state.tickets\r\n            .map(ticket =>\r\n              <React.Fragment>\r\n                <tr key={ticket.id}>\r\n                  <td>{ticket.id}</td>\r\n                  <td>{ticket.email}</td>\r\n                  <td>{ticket.title}</td>\r\n                  <td>{ticket.description}</td>\r\n                  <td>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6 text-center\">\r\n                        {this.checkStatus(ticket.status, ticket.id)}\r\n                      </div>\r\n                      <div className=\"col-6 text-center\">\r\n                        <button type=\"button\" onClick={(e) => this.handleDeleteTicket(ticket.id, e)} className=\"btn btn-sm btn-danger\">Supprimer</button>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </React.Fragment>\r\n            )\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default PostTicket;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":13,"nodeType":"36","messageId":"37","endLine":3,"endColumn":21},{"ruleId":"34","severity":1,"message":"38","line":7,"column":7,"nodeType":"36","messageId":"37","endLine":7,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":45,"column":23,"nodeType":"41","messageId":"42","endLine":45,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":53,"column":26,"nodeType":"41","messageId":"42","endLine":53,"endColumn":28},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'ressource' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]